basePath: /
definitions:
  models.Budget:
    properties:
      amount:
        type: integer
      budget_id:
        type: string
      category:
        type: string
      currency:
        type: string
      spent:
        type: integer
    type: object
  models.CreateBudgetRequest:
    properties:
      amount:
        type: integer
      category_id:
        type: string
      currency:
        type: string
    type: object
  models.CreateBudgetResponse:
    properties:
      budget_id:
        type: string
      message:
        type: string
    type: object
  models.DeleteUserRes:
    properties:
      message:
        type: string
      status:
        type: boolean
    type: object
  models.GetBudgetsResp:
    properties:
      budgets:
        items:
          $ref: '#/definitions/models.Budget'
        type: array
      message:
        type: string
      status:
        type: boolean
    type: object
  models.GetListIncomeVSExpenseResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.IncomeVSExpense'
        type: array
    type: object
  models.GetReportsByCategoryResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.SpendingByCategory'
        type: array
    type: object
  models.GetTotalReportsResponse:
    properties:
      net_savings:
        type: integer
      total_expenses:
        type: integer
      total_income:
        type: integer
    type: object
  models.GetUserByIdResponse:
    properties:
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.IncomeVSExpense:
    properties:
      amount:
        type: integer
      category:
        type: string
      currency:
        type: string
      date:
        type: string
      transaction_id:
        type: string
      type:
        type: string
    type: object
  models.LoginUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.RegisterExpenseRequest:
    properties:
      amount:
        type: integer
      category_id:
        type: string
      currency:
        type: string
      date:
        type: string
    type: object
  models.RegisterExpenseResponse:
    properties:
      message:
        type: string
      transaction_id:
        type: string
    type: object
  models.RegisterIncomeRequest:
    properties:
      amount:
        type: integer
      category_id:
        type: string
      currency:
        type: string
      date:
        type: string
    type: object
  models.RegisterIncomeResponse:
    properties:
      message:
        type: string
      transaction_id:
        type: string
    type: object
  models.RegisterUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.RegisterUserResponse:
    properties:
      email:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  models.SpendingByCategory:
    properties:
      category:
        type: string
      total_spent:
        type: integer
    type: object
  models.UpdateBudgetRequest:
    properties:
      amount:
        type: integer
      budget_id:
        type: string
    type: object
  models.UpdateBudgetResponse:
    properties:
      message:
        type: string
    type: object
  models.UpdateUserReq:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.UpdateUserResp:
    properties:
      message:
        type: string
      status:
        type: boolean
    type: object
  models.User:
    properties:
      email:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  models.VerifyUserReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.VerifyUserResp:
    properties:
      message:
        type: string
      status:
        type: boolean
    type: object
  token.Tokens:
    properties:
      expiresIn:
        type: string
      token:
        type: string
    type: object
host: localhost:9000
info:
  contact: {}
  description: Api-gateway service
  version: "1.0"
paths:
  /api/v1/budgets:
    get:
      consumes:
      - application/json
      description: Get a list of all budgets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetBudgetsResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get all budgets
      tags:
      - budgets
    post:
      consumes:
      - application/json
      description: Create a new budget with the provided details
      parameters:
      - description: Budget details
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/models.CreateBudgetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateBudgetResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new budget
      tags:
      - budgets
  /api/v1/budgets/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a budget with the provided ID
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete a budget
      tags:
      - budgets
    get:
      consumes:
      - application/json
      description: Get details of a specific budget by its ID
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get a budget by ID
      tags:
      - budgets
    put:
      consumes:
      - application/json
      description: Update an existing budget with the provided ID
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: string
      - description: Budget details
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBudgetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateBudgetResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update an existing budget
      tags:
      - budgets
  /api/v1/reports/income-expense:
    get:
      consumes:
      - application/json
      description: This method gets reports
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetTotalReportsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET REPORTS
      tags:
      - REPORTING
  /api/v1/reports/spending-by-category:
    get:
      consumes:
      - application/json
      description: This method gets reports by category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetReportsByCategoryResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET REPORTS BY CATEGORY
      tags:
      - REPORTING
  /api/v1/transactions:
    get:
      consumes:
      - application/json
      description: This method gets income and expense
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetListIncomeVSExpenseResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET TRANSACTIONS
      tags:
      - TRANSACTIONS
  /api/v1/transactions/expense:
    post:
      consumes:
      - application/json
      description: This method registers expense
      parameters:
      - description: Expense
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/models.RegisterExpenseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterExpenseResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: REGISTER EXPENSE
      tags:
      - TRANSACTIONS
  /api/v1/transactions/income:
    post:
      consumes:
      - application/json
      description: This method registers income
      parameters:
      - description: Income
        in: body
        name: income
        required: true
        schema:
          $ref: '#/definitions/models.RegisterIncomeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterIncomeResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: REGISTER INCOME
      tags:
      - TRANSACTIONS
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: This method registers a new user
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register a new user
      tags:
      - AUTH
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteUserRes'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - USERS
    put:
      consumes:
      - application/json
      description: This method updates a user's information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateUserResp'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - USERS
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: This method logs in a user
      parameters:
      - description: User login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/token.Tokens'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login user
      tags:
      - AUTH
  /api/v1/users/profile/{id}:
    get:
      consumes:
      - application/json
      description: This method retrieves a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserByIdResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - USERS
  /api/v1/users/verify:
    post:
      consumes:
      - application/json
      description: This method verifies a user
      parameters:
      - description: User verification details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.VerifyUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VerifyUserResp'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Verify user
      tags:
      - AUTH
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
